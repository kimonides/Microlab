MVI C,FFH ; SET THE LED'S STARTING VALUE

CLOCK_LOOP:
CALL CHECK_LSB ; Function that checks the LSB,it pauses the program if LSB==0 
CALL CHECK_IF_ZERO ; Function that checks if the counter is at zero,if it is then we set D=1(in 2s compliment)
CALL CHECK_IF_MAX ; Function that checks if the counter is at it's target,if it is then we set D=-1(in 2s compliment)
MOV A,C 
OUT 30H
ADD D
MOV C,A
CALL DELAY
JMP CLOCK_LOOP



CHECK_IF_ZERO:
MOV B,A ;Keep A's value
MOV A,C ;A gets the counter's value
CPI FFH ;check if we are at 0
MOV A,B ;return A's value
RNZ ;return if we're not at 0
ANI F0H ;get 4 msb
CPI 00H
MVI D,00H
MVI E,00H
RZ ; if 4 msb are 0000 then set D=0 and E=0 and exit function
NOT_0000:
MVI D,FFH ;if we are set D=1 in 2's compliment(because the leds use negative logic with D=FFH we add instead of subtract)
RRC ;kanw ta 4 msb shift sta 4 lsb wste na einai pio eukolo na to sigkrinw me to counter meta
RRC
RRC
RRC
MOV E,A ; e krataei ta 4 msb diladi to target(ta krataei sta 4 lsb tou)
RET


CHECK_IF_MAX:
MOV A,E ;move the target to A
CPI 00H
RZ
CMA ;complement it because C is complemeted
CMP C ;compare the target with the current counter
RNZ ;if they are not equal leaven routine
MVI D,01H ;if they are equal set D=-1 in 2's complement(because the leds use negative logic with D=01H we subtract instead of add)
RET


CHECK_LSB:
IN 20H
MOV B,A ; B=KEEP A'S VALUE TEMPORARY
ANI 01H
CPI 01H ; LSB==1?
JNZ CHECK_LSB
MOV A,B ; RETURN A IT'S VALUE
RET


DELAY:
PUSH B
LXI B,0FD0H ;500MS
CALL DELB
POP B
RET


END
























